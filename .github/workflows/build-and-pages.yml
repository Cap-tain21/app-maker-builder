name: Build APK & Deploy Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      ANDROID_SDK_ROOT: ${{ runner.temp }}/android-sdk
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17

      - name: Install Android SDK commandline tools
        run: |
          sudo apt-get update
          sudo apt-get install -y unzip wget
          mkdir -p "${ANDROID_SDK_ROOT}/cmdline-tools"
          wget -q https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip -O /tmp/cmdline-tools.zip
          unzip -q /tmp/cmdline-tools.zip -d "${ANDROID_SDK_ROOT}/cmdline-tools"
          mv "${ANDROID_SDK_ROOT}/cmdline-tools/cmdline-tools" "${ANDROID_SDK_ROOT}/cmdline-tools/latest" || true
          export PATH=${ANDROID_SDK_ROOT}/cmdline-tools/latest/bin:$PATH
          yes | sdkmanager --sdk_root=${ANDROID_SDK_ROOT} --licenses
          sdkmanager --sdk_root=${ANDROID_SDK_ROOT} "platform-tools" "platforms;android-33" "build-tools;33.0.0"

      - name: Ensure gradle wrapper exists (create if missing)
        run: |
          if [ -f template/gradlew ]; then chmod +x template/gradlew; else
            sudo apt-get update && sudo apt-get install -y gradle
            (cd template && gradle wrapper --gradle-version 7.5)
          fi

      - name: Build debug APK
        run: |
          cd template
          chmod +x ./gradlew || true
          ./gradlew :app:assembleDebug --no-daemon

      - name: Prepare APK artifact
        run: |
          mkdir -p deploy
          if [ -f template/app/build/outputs/apk/debug/app-debug.apk ]; then
            cp template/app/build/outputs/apk/debug/app-debug.apk deploy/
            (cd deploy && zip -r MyApp.zip *.apk)
          else
            echo "No APK found; build might have failed"
          fi

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-artifacts
          path: deploy/*

  deploy-pages:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Unzip app_content.zip if present (optional)
        run: |
          if [ -f app_content.zip ]; then mkdir -p template/app/src/main/assets/www/myapp && unzip -o app_content.zip -d template/app/src/main/assets/www/myapp/ || true; fi

      - name: Deploy GitHub Pages (publish ./template/app/src/main/assets/www/myapp)
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GH_PAT }}
          publish_dir: ./template/app/src/main/assets/www/myapp
          user_name: 'Cap-tain21'
          user_email: 'onlycaptains07@example.com'
          publish_branch: gh-pages
